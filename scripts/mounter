#!/bin/bash

Blkinfo(){
    for partlabel in $@ ; do
    label=$(blkid -p -o value -s LABEL)
        if [[ -n $label ]] ; then
        echo "/dev/$partlabel" $(blkid -p -o value -s TYPE -s LABEL "/dev/$partlabel")
        else
        echo "/dev/$partlabel Generic_Storage_Device" $(blkid -p -o value -s TYPE "/dev/$partlabel")
        fi
 done
}

Mounter(){
    if [[ $4 == *fat* ]] ; then
        if ! mount | grep -q $2 ; then
            mkdir -p -m 766 /mnt/$3 && \
            mount $2 /mnt/$3 -o umask=000 && \
            echo "mounted: ${DEVICES[$1]} at /mnt/$3"
        fi
    fi
}

Unmounter(){
    echo "Syncing: $3"
    sync && \
    umount $2 && echo "unmounted $@"
}

Listen(){
while read -r line ; do
    case $line in
    *"device number"*)
        case $line in
        *new*)
        device_number="dv_$(echo $line | grep -Po 'number \K.*(?= using)')"
        ;;
        *disconnect,*)
        device_number="dv_${line##* }"
        echo "disconnected: ${DEVICES[$device_number]}"
        unset DEVICES[$device_number]
        ;;
        esac
    ;;
    *sdb:*|*sdc:*|*sdd:*|*sde:*)
        if [[ -n ${line#\[*\:} ]] ; then
          fullstring=$(Blkinfo ${line#\[*\: })
        else
          fullstring=$(Blkinfo ${line:16:3})
        fi
          DEVICES[$device_number]="$device_number $fullstring"
          echo "connected: ${DEVICES[$device_number]}"
          Mounter ${DEVICES[$device_number]}
    ;;
    "u "*)
        Unmounter ${DEVICES[${line#* }]}
        ;;
    "m "*)
        Mounter ${DEVICES[${line#* }]}
        ;;
    esac
done
}

Run(){
	dmesg -W --facility=kern > /tmp/mounter-merge &
    tail -f --retry /tmp/mounter-receive > /tmp/mounter-merge &
    Listen < /tmp/mounter-merge
}

(umask=000 ; touch /tmp/mounter-info ; touch /tmp/mounter-receive)
mkfifo -m 766 /tmp/mounter-merge >/dev/null 2>&1
Run
